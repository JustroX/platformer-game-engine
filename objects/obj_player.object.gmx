<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>116</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_move_contact</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>270</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>-1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// declare variables
hp = 45
max_hp  =50
can_attack = true
attack_speed = 0.6
movement_speed = 8

//moment
animation = ""
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///sprites

name = "basic"

_spr_idle = asset_get_index("spr_character_"+name+"_player_idle");
_spr_walk = asset_get_index("spr_character_"+name+"_player_walk");
_spr_jump =  asset_get_index("spr_character_"+name+"_player_jump");
_spr_onair =  asset_get_index("spr_character_"+name+"_player_onair");
_spr_attack =  asset_get_index("spr_character_"+name+"_player_attack_basic");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///reset cooldown
can_attack = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///user horizontal navigation 

if(animation ==  "")
{
    if keyboard_check(ord('D'))
    { 
        hspeed = min( hspeed + 0.6 , movement_speed )
        image_speed  = 1
    }
    else
    if keyboard_check(ord('A'))
    {
        hspeed = max ( hspeed - 0.6 , -movement_speed )
        image_speed  = -1
    }
    else
    {
        hspeed  *= 0.9
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// platformer properties

if( place_free(x,y+max(2,vspeed)) )
{
    
    if(animation ==  "")
    {
        if(abs(hspeed) &lt; 2)
            sprite_index = _spr_onair
        else
            sprite_index = _spr_walk
    }
    gravity = 0.3
}

else
if( !place_free(x,y+min(-2,vspeed)) and vspeed&lt;0 )
{
    move_contact_solid(0,-1)
    vspeed = -0.8*vspeed
    gravity = 0.3
    
    if(animation ==  "")
        sprite_index = _spr_idle
}
else
{
    gravity = 0
    vspeed  =0
  
    
    if(animation ==  "")
    {
        if(abs(hspeed) &lt; 2)
            sprite_index = _spr_idle
        else
            sprite_index = _spr_walk
    }
    
    move_contact_solid(270,-1)
}   
if vspeed &gt; 7 
    vspeed = 7
    
if( not place_free(x+hspeed,y) )
{
    if(hspeed &gt; 0 )
        move_contact_solid(0,-1)
    else
        move_contact_solid(180,-1)
    
    hspeed = 0
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///user vertical navigation
if  (keyboard_check(ord('W')) or keyboard_check(vk_space) ) and not(place_free(x,y+1)) and place_free(x,y-3) and animation==""
{

    if(abs(hspeed) &lt; 2)
    {
        animation = "jumping"
        sprite_index = _spr_jump
        image_index = 0
        image_speed = 1
    }
    else
        vspeed -= 8
}

if(animation=="jumping" and image_index = image_number-1)
{
    vspeed -= 8
    animation = ""
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///basic attack
if(mouse_check_button_pressed(mb_left) and can_attack and animation=="" )
{
    sprite_index = _spr_attack
    animation =  "attack"
    can_attack = false
    image_index = 0
    image_speed  = 1
}
if(animation ==  "attack" and image_index== image_number-1)
{
    animation =  ""
    sprite_index = _spr_idle
    alarm[0] = floor(30)
    
}
if(animation ==  "attack" and image_index== 11)
{
    hspeed +=2*(mouse_x-x)/abs(mouse_x-x);   
    hspeed *=2   
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///face the right direction
if( mouse_x &gt; x )
    image_xscale = 1
else
    image_xscale = -1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>500</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring>draw_self();</codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw hud
draw_healthbar(x-10,y-48,x+10,y-53,hp/max_hp*100,make_colour_hsv(0,1,0.5),c_green,c_green,-1,false,true)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
